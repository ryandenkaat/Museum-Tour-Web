@model PagedList.IPagedList<ZoneDto>
@using PagedList.Mvc;
@using Forge.Museum.BLL.Http;
@using Forge.Museum.Interfaces.DataTransferObjects.Artefact;
<link href="~/Content/reset.css" rel="stylesheet" type="text/css" />
<link href="~/Content/Index.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "Index";
}

<h2>Zones</h2>

<p>
    @Html.ActionLink("Add New Zone", "Create")
</p>
@using (Html.BeginForm("Index", "Artefacts", FormMethod.Get))
{
    <p>
        Search by Name: @Html.TextBox("searchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>
}
<div class="content-box">
    <div class="content-box-header">
        <h3>All Zones</h3>
        <ul class="content-box-tabs" style="display: block;">
            <li><a href="#tab1" class="default-tab current">Results</a></li> <!-- href must be unique and match the id of target div -->
            <li>
                @Html.ActionLink("Create New Zone", "Create")
            </li>
        </ul>
    </div>

    <div class="content-box-content" style="display: block;">
        <table class="table">
            <thead>
                <tr>
                    <th>
                        @Html.ActionLink("ID#", "Index", new { sortOrder = ViewBag.IdSortParm, currentFilter = ViewBag.CurrentFilter })
                    </th>
                    <th>
                        @Html.ActionLink("Zone Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tfoot>
                <tr>
                    <td colspan="6">
                        <div class="pagination-sm">
                            @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
                        </div>
                    </td>
                </tr>
            </tfoot>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Id)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td>
                            @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                            @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                            @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
