@model Forge.Museum.Interfaces.DataTransferObjects.Artefact.ArtefactInfoDto
<link href="~/Content/reset.css" rel="stylesheet" type="text/css" />
<link href="~/Content/Index.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "Create";


    var artefactDropdown = new List<SelectListItem>();

    if (ViewBag.ArtefactList != null)
    {
        artefactDropdown = ViewBag.ArtefactList;
    }

    var multimediaOptions = new List<SelectListItem>()
    {
        new SelectListItem { Text = "Text", Value = "0"},
        new SelectListItem { Text = "Image", Value = "1"},
        new SelectListItem { Text = "Video", Value = "2"},
        new SelectListItem { Text = "Audio", Value = "3"}

    };
    string NameValidation;
    if (ViewBag.ValidationName != null)
    {
        NameValidation = ViewBag.ValidationName;
    }
    else
    {
        NameValidation = "";
    }

}

<h2>Create</h2>

@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    @if (ViewBag.ArtefactSelected == true)
    {
        <h4>Add New Content for Artefact ID#@ViewBag.ArtefactID - @ViewBag.ArtefactName</h4>
    }
    else
    {
        <h4>New Artefact Content</h4>
    }
    <hr />

    <div class="form-group">
        @Html.LabelFor(model => model.Artefact, "Artefact", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.Artefact.Id, artefactDropdown, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ArtefactCategory, NameValidation, new { @class = "text-danger" })
        </div>
    </div>

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ArtefactInfoType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.ArtefactInfoType, multimediaOptions, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ArtefactInfoType, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.File, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" name="ArtefactInfoFile" />
            @Html.ValidationMessageFor(model => model.File, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
