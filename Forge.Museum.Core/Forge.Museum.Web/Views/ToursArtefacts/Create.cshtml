@model Forge.Museum.Interfaces.DataTransferObjects.Tour.TourArtefactDto
<link href="~/Content/reset.css" rel="stylesheet" type="text/css" />
<link href="~/Content/Index.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "Create";

    // Get Tour ID
    if (ViewBag.TourID != null)
    {
        string tourId = ViewBag.TourID;
    }

    //Populate artefact dropdown
    var artefactDropdown = new List<SelectListItem>();
    if (ViewBag.ArtefactList != null)
    {
        artefactDropdown = ViewBag.ArtefactList;
    }

    //Populate tour Dropdown
    var tourDropdown = new List<SelectListItem>();
    if (ViewBag.TourList != null)
    {
        tourDropdown = ViewBag.TourList;
    }

}

<h2>Create</h2>
@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">

    @if (ViewBag.TourSelected == true)
    {
        <h4>Add New Artefact to Tour ID#@ViewBag.TourID - @ViewBag.TourName</h4>
    }
    else
    {
        <h4>Add New Artefact to Tour</h4>
    }
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)
    <div class="form-group">
        @Html.LabelFor(model => model.Tour, "Tour", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Tour.Id, tourDropdown, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Tour, "", new { @class = "text-danger" })

        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Artefact, "Artefact", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Artefact.Id, artefactDropdown, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Artefact, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.Order, "Order", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Order, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Order, "", new { @class = "text-danger" })

        </div>
    </div>

    @if (ViewBag.IndexAvail == false)
    {
        @Html.ValidationMessageFor(model => Model.Order, "This Index Position is Already in Use", new { @class = "text-danger" })

    }



    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" new { tourId=@ViewBag.TourID />
        </div>
    </div>
</div>
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
